---
# Role to install Let's Encrypt's Certbot, install certificate(s) and automate renewals
- assert:
    that:
      - "m_httpd_server_admin is defined"
      - "m_httpd_server_admin != 'admin@example.com'"
    fail_msg: >
      "To use certbot, you must supply a valid email for 'm_httpd_server_admin' in your public.yml
      For example, add a line like this to /opt/conf-meza/public/public.yml
      m_httpd_server_admin: me@gmail.com"

- name: Ensure firewall port 54321 OPEN when certbot ENABLED
  include_role:
    name: firewall_port
  vars:
    firewall_action: open
    firewall_port: 54321
    firewall_protocol: tcp
    firewall_zone: "{{m_private_networking_zone|default('public')}}"
  when:
    - enable_certbot
    - (docker_skip_tasks is not defined or not docker_skip_tasks)

- name: Remove Meza cert files when certbot ENABLED
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/haproxy/certs/meza.pem
    - /etc/haproxy/certs/meza.crt
    - /etc/haproxy/certs/meza.key

  when:
    - enable_certbot
    - (docker_skip_tasks is not defined or not docker_skip_tasks)

- name: Ensure Certbot installed 
  package:
    name: certbot
    state: present

- name: Check for existing cert(s)
  find: 
    paths: /etc/haproxy/certs
    patterns: '*.pem'
    excludes: 'meza.pem'
  register: certs

- debug:
    msg: "Found existing certificate at {{ item.path }}"
  with_items: "{{ certs.files }}"

- name: Generate SSL Certificate
  shell: >
    certbot certonly --non-interactive --email {{ m_httpd_server_admin }}
    --preferred-challenges http --standalone --agree-tos --renew-by-default 
    --webroot-path {{ m_htdocs }} -d {{ wiki_app_fqdn }} --http-01-port=54321
  delegate_to: localhost
  run_once: True
  when: 
    - inventory_hostname in groups['load-balancers']
    - certs == ""
    - enable_certbot

- name: Concatenate certificate files for HAproxy
  shell: |
    for SITE in $(find /etc/letsencrypt/live/ -maxdepth 1 -mindepth 1 -type d -exec basename {} \;)
    do
      cd /etc/letsencrypt/live/$SITE
      cat fullchain.pem privkey.pem > /etc/haproxy/certs/$SITE.pem
    done
  args:
    executable: /bin/bash
  # notify:
  #   - restart haproxy
