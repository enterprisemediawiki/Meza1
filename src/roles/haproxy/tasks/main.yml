---
# FIXME: Eventually add the ability to get SSL cert from letsencrypt
#     ref: https://www.digitalocean.com/community/tutorials/how-to-secure-haproxy-with-let-s-encrypt-on-centos-7
# Other refs:
#     https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Load_Balancer_Administration/install_haproxy_example1.html
#     https://gist.github.com/thisismitch/7c91e9b2b63f837a0c4b
#     https://www.unixmen.com/configure-high-available-load-balancer-haproxy-keepalived/

- name: Install haproxy packages
  yum: name={{item}} state=installed
  with_items:
    - haproxy
    - openssl
    # - keepalived ?

# Generate self-signed cert if one doesn't exist (note: trusting an article
# on the internet on this one, that it'll only generate if one doesn't exist)
- name: Ensure haproxy certs directory exists
  file:
    path: /etc/haproxy/certs
    state: directory

- name: Check if SSL cert exists
  stat:
    path: "/etc/haproxy/certs/meza.pem"
  register: ssl_cert_stat_result
- name: create self-signed SSL cert
  command: |
    openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 \
      -subj "/C=US/ST=TX/L=Houston/O=EnterpriseMediaWiki/CN=${ansible_fqdn}" \
      -keyout /etc/haproxy/certs/meza.key -out /etc/haproxy/certs/meza.crt
  #cat /etc/haproxy/certs/meza.crt /etc/haproxy/certs/meza.key > /etc/haproxy/certs/meza.pem
  #rm /etc/haproxy/certs/meza.crt
  #rm /etc/haproxy/certs/meza.key
  when: ssl_cert_stat_result.stat.exists == False
  notify:
    - restart haproxy
- name: Concatenate cert and key into pem file
  shell: |
    cat /etc/haproxy/certs/meza.crt /etc/haproxy/certs/meza.key > /etc/haproxy/certs/meza.pem
  when: ssl_cert_stat_result.stat.exists == False
  notify:
    - restart haproxy


# Generate self-signed cert if one doesn't exist (note: trusting an article
# on the internet on this one, that it'll only generate if one doesn't exist)
- name: Ensure haproxy certs have secure permissions
  file:
    path: /etc/haproxy/certs
    state: directory
    recurse: yes
    owner: root
    group: root
    mode: 0600

- name: write the haproxy config file
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
  notify:
    - restart haproxy

# - name: Ensure haproxy socket directory exists
#   file:
#     path: /run/haproxy
#     state: directory
#     owner: root
#     group: root
#     mode: 0660


- name: Ensure error files directory in place
  file:
    path: /etc/haproxy/errors
    state: directory
    # FIXME: permissions?


- name: Ensure error pages in place
  template:
    src: "errors/{{ item }}.http.j2"
    dest: "/etc/haproxy/errors/{{ item }}.http"
  with_items:
    # FIXME: add the others, make the 500 error one good
    # - 400
    # - 403
    # - 408
    - 500
    # - 502
    # - 503
    # - 504

- name: Ensure firewalld haproxy service files in place
  template:
    src: "haproxy-{{ item }}.firewalld.xml.j2"
    dest: "/etc/firewalld/services/haproxy-{{ item }}.xml"
    owner: root
    group: root
    mode: 0644
  with_items:
    - http
    - https

- name: Ensure SELinux context for firewalld haproxy service files
  shell: restorecon /etc/firewalld/services/haproxy-{{ item }}.xml
  with_items:
    - http
    - https

# Allow http and https through firewall
#- name: Configure firewalld for haproxy via {{ item }}
#  firewalld:
#    service: "haproxy-{{ item }}"
#    permanent: true
#    immediate: true
#    state: enabled
#    zone: public
#  with_items:
#    - http
#    - https

- name: Configure firewalld for haproxy via port 80 and 443
  firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    immediate: true
    state: enabled
    zone: "{{m_public_networking_zone|default('public')}}"
  with_items:
    - 80
    - 443

# FIXME: haproxy will need to handle reverse proxy for Elasticsearch plugins
# - name: Configure firewalld for Elasticsearch reverse proxy
#   firewalld:
#     port: 8008/tcp
#     permanent: true
#     immediate: true
#     state: enabled
#     zone: public


- name: Uncomment '$ModLoad imudp' in /etc/rsyslog.conf
  replace:
    dest: /etc/rsyslog.conf
    regexp: '^#\$ModLoad imudp'
    replace: '$ModLoad imudp'
  notify:
    - restart rsyslog

- name: Uncomment '$UDPServerRun 514' in /etc/rsyslog.conf
  replace:
    dest: /etc/rsyslog.conf
    regexp: '^#\$UDPServerRun 514'
    replace: '$UDPServerRun 514'
  notify:
    - restart rsyslog

- name: Ensure /etc/rsyslog.d/haproxy.conf configured
  template:
    src: haproxy.rsyslog.conf.j2
    dest: /etc/rsyslog.d/haproxy.conf
  notify:
    - restart rsyslog


- name: ensure haproxy is running (and enable it at boot)
  service:
    name: haproxy
    state: started
    enabled: yes
