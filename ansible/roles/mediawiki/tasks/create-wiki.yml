---

# import wikis config vars
# overwrite_existing_wikis=false
# keep_imports_directories=false
# skip_database_update=false
# skip_smw_rebuild=false

- name: Fail if `wiki_id` param not passed
  fail:
    msg: "Using create-wiki.yml without passing 'wiki_id' param"
  when: wiki_id is not defined

- name: Fail if `wiki_site_name` param not passed
  fail:
    msg: "Using create-wiki.yml without passing 'wiki_site_name' param"
  when: wiki_site_name is not defined

- name: Ensure directory structure for wiki
  file:
    path: "{{ m_htdocs }}/wikis/{{ wiki_id }}/{{ item }}"
    state: directory
    mode: 0755
    owner: apache # FIXME not really necessary except on /images
    group: apache
    recurse: yes
  with_items:
    - ""
    - "config"
    - "images"

# cp -avr "$m_config/template/wiki-init" "$imports_dir/$wiki_id"
# cp -avr "$m_mediawiki/maintenance/tables.sql" "$imports_dir/$wiki_id/wiki.sql"

- name: Ensure wiki logo and favicon in place
  copy:
    src: "templates/wiki-init/{{ item }}"
    dest: "{{ m_htdocs }}/wikis/{{ wiki_id }}/config/{{ item }}"
    mode: 0755
    owner: apache # FIXME not really necessary except on /images
    group: apache
    force: no
  with_items:
    - "logo.png"
    - "favicon.ico"


- name: Ensure wiki pre and post local settings files in place
  template:
    src: "templates/wiki-init/{{ item }}.j2"
    dest: "{{ m_htdocs }}/wikis/{{ wiki_id }}/config/{{ item }}"
    mode: 0755
    owner: apache # FIXME not really necessary except on /images
    group: apache
    force: no
  with_items:
    - "preLocalSettings.php"
    - "postLocalSettings.php"


- name: Copy mediawiki-tables.sql to master database
  copy:
    src: files/mediawiki-tables.sql
    dest: /tmp/mediawiki-tables.sql
    mode: 0755
    force: yes


- name: Initiate database
  mysql_db:
    name: "wiki_{{ wiki_id }}"
    state: import
    target: /tmp/mediawiki-tables.sql
  delegate_to: "{{ groups['db-master'][0] }}"


- name: Run update.php
  shell: >
    WIKI="{{ wiki_id }}" php "{{ m_mediawiki }}/maintenance/update.php" --quick
  notify: restart parsoid


# Import pages required for SemanticMeetingMinutes and rebuild indices
- name: import pages for SemanticMeetingMinutes
  shell: >
    WIKI="{{ wiki_id }}" php "{{ m_mediawiki }}/maintenance/importDump.php" --report --debug < {{ m_mediawiki }}/extensions/SemanticMeetingMinutes/ImportFiles/import.xml


- name: rebuildrecentchanges.php
  shell: >
    WIKI="{{ wiki_id }}" php "{{ m_mediawiki }}/maintenance/rebuildrecentchanges.php"


# Create an admin user for this demo wiki
- name: Create "Admin" user on Demo Wiki
  shell: >
    WIKI="{{ wiki_id }}" php "{{ m_mediawiki }}/maintenance/createAndPromote.php" --force --custom-groups="sysop bureaucrat" Admin adminpass


- name: Run SMW's rebuildData.php
  shell: >
    WIKI="{{ wiki_id }}" php "{{ m_mediawiki }}/extensions/SemanticMediaWiki/maintenance/rebuildData.php"
    -d 5 -v --ignore-exceptions --exception-log="{{ m_meza }}/logs/rebuilddata-exceptions-{{ wiki_id }}-.log"


# Is this "disable search update" required at this point? I'm not sure why we'd do this
# echo "\$wgDisableSearchUpdate = true;" >> "$m_htdocs/wikis/$wiki_id/config/postLocalSettings.php"
- name: Run runJobs.php
  shell: >
    WIKI="{{ wiki_id }}" php "{{ m_mediawiki }}/maintenance/runJobs.php" --quick
# sed -r -i 's/\$wgDisableSearchUpdate = true;//g;' "$m_htdocs/wikis/$wiki_id/config/postLocalSettings.php"


# Generate ES index, since it is skipped in the initial create-wiki.sh
# Ref: https://git.wikimedia.org/blob/mediawiki%2Fextensions%2FCirrusSearch.git/REL1_25/README
- name: Running elastic-build-index.sh for demo wiki
  shell: |
    wiki_id="{{ wiki_id }}"
    source "/opt/meza/config/core/config.sh"
    source "{{ m_scripts }}/elastic-build-index.sh"
